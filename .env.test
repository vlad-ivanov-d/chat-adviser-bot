# Database password for Docker container
DATABASE_PASSWORD=password
# Database port for Docker container
DATABASE_PORT=5433
# Database username for Docker container
DATABASE_USER=postgres
# Connection URL for database server. If it's called from docker, it's necessary to replace "localhost" with "db".
DATABASE_URL=postgresql://postgres:password@localhost:5433/postgres

# Grafana port for Docker container (optional)
GRAFANA_PORT=3201

# Loki port for Docker container (optional)
LOKI_PORT=3101
# Connection URL for Loki (optional). If it's called from docker, it's necessary to replace "localhost" with "loki".
LOKI_URL=http://localhost:3101

# Redis host. If it's called from docker, it's necessary to replace "localhost" with "cache".
REDIS_HOST=localhost
# Redis password for Docker container and connection within the app
REDIS_PASSWORD=password
# Redis port for Docker container and connection within the app
REDIS_PORT=6380

# Telegram client API hash (optional). Extends the bot API and allows to track the deletion of messages.
# Should be received from https://my.telegram.org.
TG_CLIENT_API_HASH=0123456789abcdeffedcba9876543210
# Telegram client API ID (optional). Extends the bot API and allows to track the deletion of messages.
# Should be received from https://my.telegram.org.
TG_CLIENT_API_ID=
# Telegram bot API token. Should be received from https://telegram.me/BotFather.
TG_TOKEN=123456:ABC-DEFGHIJKLMNO-zyxwvZYX987654321
# Telegram bot webhook domain if it's necessary to use webhooks (optional)
TG_WEBHOOK_DOMAIN="example.com"
# Telegram bot webhook path if it's necessary to use with webhooks (optional)
TG_WEBHOOK_PATH="/chat-adviser-bot"
# Telegram bot webhook port if it's necessary to use with webhooks (optional)
TG_WEBHOOK_PORT=3002
# Secret token to be sent back in Telegram webhook header for security (optional)
TG_WEBHOOK_SECRET_TOKEN=
