{
  "env": {
    "es6": true,
    "node": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:typescript-sort-keys/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:jsdoc/recommended-error",
    "plugin:promise/recommended",
    "plugin:sonarjs/recommended",
    "plugin:prettier/recommended"
  ],
  "ignorePatterns": [
    "coverage/",
    "dist/"
  ],
  "overrides": [
    {
      "files": ["**/*.js", "**/*.mjs"],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-unsafe-argument": "off",
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-call": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off",
        "jsdoc/require-param-type": "error",
        "jsdoc/require-returns-type": "error"
      }
    }
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "tsconfig.json",
    "tsconfigRootDir": "."
  },
  "plugins": [
    "@typescript-eslint",
    "jsdoc",
    "optimize-regex",
    "promise",
    "simple-import-sort",
    "sonarjs",
    "typescript-sort-keys"
  ],
  "rules": {
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true,
        "allowHigherOrderFunctions": false,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/explicit-member-accessibility": "error",
    "@typescript-eslint/naming-convention": [
      "error",
      { "format": ["UPPER_CASE", "strictCamelCase"], "selector": "default" },
      { "format": ["StrictPascalCase"], "selector": "enumMember" },
      // Ignore properties because of i18next, prisma and telegraf typings
      { "format": null, "selector": "property" },
      { "format": ["StrictPascalCase"], "selector": "typeLike" },
      { "format": ["UPPER_CASE", "strictCamelCase"], "selector": "variableLike" },
      {
        "format": ["StrictPascalCase"],
        "prefix": ["can", "did", "has", "is", "should", "will"],
        "selector": "variable",
        "types": ["boolean"]
      }
    ],
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/no-unused-vars": "error",
    "@typescript-eslint/prefer-for-of": "error",
    "curly": "error",
    "default-case": "error",
    "eqeqeq": "error",
    "guard-for-in": "error",
    "import/no-cycle": "error",
    "import/no-default-export": "error",
    "import/no-deprecated": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-unresolved": "off",
    "jsdoc/require-jsdoc": [
      "error",
      {
        "publicOnly": false,
        "require": {
          "ArrowFunctionExpression": true,
          "FunctionDeclaration": true,
          "FunctionExpression": true,
          "MethodDefinition": true
        }
      }
    ],
    "jsdoc/require-description": "error",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns-type": "off",
    "max-params": "error",
    "multiline-comment-style": ["error", "starred-block"],
    "no-alert": "error",
    "no-console": "error",
    "no-invalid-this": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-restricted-syntax": ["error", {
      "message": "Must not use this in a static context.",
      "selector": "MethodDefinition[static = true] ThisExpression"
    }],
    "no-throw-literal": "error",
    "one-var": ["error", "never"],
    "radix": "error",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": "error",
    "sort-keys": "error"
  },
  "settings": {
    "import/resolver": { "node": true, "typescript": true }
  }
}
