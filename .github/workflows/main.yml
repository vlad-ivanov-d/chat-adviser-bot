# yaml-language-server: $schema=https://json.schemastore.org/github-action.json

name: Continuous Integration

on:
  pull_request:
    branches: ["*"]
  push:
    branches: [dev, main]

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: Restore dependencies
        run: npm ci
      - name: Build sources
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: |
            Dockerfile
            compose.yml
            dist
            package-lock.json
            package.json
            prisma

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: Restore dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:cov
      - name: Run e2e tests
        run: npm run test:e2e:cov
      - name: Merge test coverage
        run: npm run merge:cov
      - name: Check test coverage badges
        run: npm run make:badges -- --ci
      - name: Run load tests
        run: npm run k6

  deploy:
    environment: production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [build, test]
    runs-on: ubuntu-latest
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20.11.1
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: app
      - name: Start the app in docker
        env:
          BOT_TOKEN: ${{secrets.BOT_TOKEN}}
          DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          DATABASE_PORT: ${{secrets.DATABASE_PORT}}
          DATABASE_URL: ${{secrets.DATABASE_URL}}
          DATABASE_USER: ${{secrets.DATABASE_USER}}
          DOCKER_HOST: ${{secrets.DOCKER_HOST}}
          SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
          SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        run: |
          eval $(ssh-agent -s)
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
          npm run start:prod:docker
        shell: bash
